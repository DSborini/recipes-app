{"version":3,"sources":["services/fetchApi.jsx","redux/actions/index.js","images/shareIcon.svg","images/blackHeartIcon.svg","images/whiteHeartIcon.svg","redux/actions/actionTypes.js","images/logo.png","images/searchIcon.svg","images/profileIcon.svg","components/SearchBar.jsx","images/drinkIcon.svg","images/exploreIcon.svg","images/mealIcon.svg","pages/Login.js","components/Header.jsx","components/Footer.jsx","pages/Food.js","pages/Beverages.js","components/Recommendations.jsx","pages/FoodRecipe.js","pages/BeverageRecipe.js","components/FoodInProgressInfo.jsx","pages/FoodInProgress.js","components/BeveragesInProgressInfo.jsx","pages/BeveragesInProgress.js","pages/Explore.js","pages/ExploreFood.js","pages/ExploreBeverages.js","pages/FoodIngredients.js","pages/BeverageIngredients.js","pages/FoodByOrigin.js","pages/Profile.js","pages/DoneRecipes.js","pages/FavoriteRecipes.js","App.js","redux/reducers/fetchApiReducer.jsx","redux/reducers/index.js","redux/store/index.js","serviceWorker.js","index.js"],"names":["fetchAPI","url","fetch","then","response","json","fetchApiAction","payload","type","FETCH_API","foodIngredients","FOOD_INGREDIENT","drinkIngredients","DRINK_INGREDIENT","module","exports","SearchBar","props","onChangeInput","bind","fetchFood","fetchBeverages","OnClickSearch","onSingleRecipeReturn","state","input","filter","API","target","this","setState","value","history","drinks","length","push","idDrink","meals","idMeal","global","alert","SendApiToState","responseAPI","title","className","htmlFor","placeholder","data-testid","onChange","event","id","variant","onClick","map","key","name","React","Component","connect","dispatch","withRouter","Login","email","password","disabled","validateForm","handleChange","onClickSubmit","localStorage","setItem","JSON","stringify","test","src","logo","alt","alertMessage","Form","Group","controlId","Label","Control","Header","renderSearchButton","onClickSearchBtn","searchBar","prev","searchIcon","to","profileIcon","Footer","onClickButton","callback","redirect","alterFoodIngredientsKey","alterDrinkIngredientsKey","drinkIcon","exploreIcon","mealIcon","Food","renderCards","renderCategories","fetchCategories","onClickCategoryBtn","categoriesList","apiEndPoint","foodIngredientRedux","category","index","strCategory","resultsApi","food","strMeal","strMealThumb","data","resultAPI","foodIngredient","Beverages","drinkIngredientRedux","drink","strDrink","strDrinkThumb","width","drinkIngredient","Recommendations","recommendedRecipe","renderRecommendedFood","renderRecommendedDrinks","renderRecommended","fetchRecommended","api","meal","FoodRecipe","detailsRecipe","copyLink","isFavorite","fetchDetails","renderVideo","renderRecipeBtn","onClickShare","onClickFavoriteIcon","renderHeartIcon","renderFavorite","copy","window","location","href","favoriteRecipes","parse","getItem","match","params","newFavorite","area","strArea","alcoholicOrNot","image","find","recipe","newArray","addFavorite","split","strYoutube","arrayIngredients","position","ingredients","measure","recipesDone","recipesInProgress","blackHeartIcon","whiteHeartIcon","shareIcon","renderIngredients","strInstructions","height","BeverageRecipe","strAlcoholic","undefined","cocktails","FoodInProgressInfo","onClickFinishRecipe","doneRecipes","today","Date","day","getDate","month","getMonth","year","getFullYear","currentDate","newRecipe","doneDate","tags","strTags","checkRegister","console","log","setDisable","FoodInProgress","ingQuant","checkedIngredients","handleChecked","handleFavoriteLocalStorage","verifyChecks","renderNumber","ing","prevStorage","indexOf","pos","splice","favoriteLocal","idFood","obj","setInitialLocal","includes","ingNumber","checked","BeveragesInProgressInfo","BeveragesInProgress","Explore","ExploreFood","randomId","fetchRandom","random","ExploreBeverages","FoodIngredients","handleIngredientName","ingredient","addIngredientsRedux","strIngredient","BeverageIngredients","strIngredient1","FoodByOrigin","respAPI","respArea","respOriginal","renderSelect","onChangeSelect","filterByArea","responseArea","countryArea","Profile","onClickLogOut","removeItem","userEmail","renderEmail","DoneRecipes","allRecipes","getDoneRecipes","link","recipeInfo","tag","twoTag","renderFilterDoneRecipe","renderDoneRecipes","FavoriteRecipes","getFavoriteRecipes","renderFilterFavoriteRecipe","renderFavoriteRecipes","App","exact","path","component","render","INITIAL_STATE","fetchApiReducer","action","rootReducers","combineReducers","store","createStore","composeWithDevTools","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ed451464.chunk.js","sourcesContent":["function fetchAPI(url) {\n  return fetch(url)\n    .then((response) => response.json())\n    .then((response) => response);\n}\n\nexport default fetchAPI;\n","import { FETCH_API, FOOD_INGREDIENT, DRINK_INGREDIENT } from './actionTypes';\n\nexport const fetchApiAction = (payload) => ({\n  type: FETCH_API,\n  payload,\n});\n\nexport const foodIngredients = (payload) => ({\n  type: FOOD_INGREDIENT,\n  payload,\n});\n\nexport const drinkIngredients = (payload) => ({\n  type: DRINK_INGREDIENT,\n  payload,\n});\n","module.exports = __webpack_public_path__ + \"static/media/shareIcon.06215ed4.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackHeartIcon.b8913346.svg\";","module.exports = __webpack_public_path__ + \"static/media/whiteHeartIcon.ea3b6ba8.svg\";","export const FETCH_API = 'FETCH_API';\nexport const FOOD_INGREDIENT = 'FOOD_INGREDIENT';\nexport const DRINK_INGREDIENT = 'DRINK_INGREDIENT';\n","module.exports = __webpack_public_path__ + \"static/media/logo.27449c84.png\";","module.exports = __webpack_public_path__ + \"static/media/searchIcon.db812135.svg\";","module.exports = __webpack_public_path__ + \"static/media/profileIcon.74e487e5.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { fetchApiAction } from '../redux/actions';\nimport fetchAPI from '../services/fetchApi';\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onChangeInput = this.onChangeInput.bind(this);\n    this.fetchFood = this.fetchFood.bind(this);\n    this.fetchBeverages = this.fetchBeverages.bind(this);\n    this.OnClickSearch = this.OnClickSearch.bind(this);\n    this.onSingleRecipeReturn = this.onSingleRecipeReturn.bind(this);\n    this.state = {\n      input: '',\n      filter: '',\n      API: {},\n    };\n  }\n\n  onChangeInput({ target }, type) {\n    return this.setState({\n      [type]: target.value,\n    });\n  }\n\n  onSingleRecipeReturn() {\n    const { history } = this.props;\n    const { API } = this.state;\n    if (API.drinks && API.drinks.length === 1) {\n      return history.push(`/bebidas/${API.drinks[0].idDrink}`);\n    }\n    if (API.meals && API.meals.length === 1) {\n      return history.push(`/comidas/${API.meals[0].idMeal}`);\n    }\n    if (API.meals === null || API.drinks === null) {\n      return global\n        .alert('Sinto muito, não encontramos nenhuma receita para esses filtros.');\n    }\n    return null;\n  }\n\n  async fetchFood() {\n    const { SendApiToState } = this.props;\n    const { input, filter } = this.state;\n    let url;\n    if (filter === 'Ingrediente') {\n      url = `https://www.themealdb.com/api/json/v1/1/filter.php?i=${input}`;\n    }\n    if (filter === 'Nome') {\n      url = `https://www.themealdb.com/api/json/v1/1/search.php?s=${input}`;\n    }\n    if (filter === 'Primeira Letra') {\n      if (input.length > 1) {\n        return global.alert('Sua busca deve conter somente 1 (um) caracter');\n      }\n      url = `https://www.themealdb.com/api/json/v1/1/search.php?f=${input}`;\n    }\n    const responseAPI = await fetchAPI(url);\n    SendApiToState(responseAPI);\n    return this.setState({\n      API: responseAPI,\n    }, () => this.onSingleRecipeReturn());\n  }\n\n  async fetchBeverages() {\n    const { SendApiToState } = this.props;\n    const { input, filter } = this.state;\n    let url;\n    if (filter === 'Ingrediente') {\n      url = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${input}`;\n    }\n    if (filter === 'Nome') {\n      url = `https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${input}`;\n    }\n    if (filter === 'Primeira Letra') {\n      if (input.length > 1) {\n        return global.alert('Sua busca deve conter somente 1 (um) caracter');\n      }\n      url = `https://www.thecocktaildb.com/api/json/v1/1/search.php?f=${input}`;\n    }\n    const responseAPI = await fetchAPI(url);\n    SendApiToState(responseAPI);\n    return this.setState({\n      API: responseAPI,\n    }, () => this.onSingleRecipeReturn());\n  }\n\n  OnClickSearch() {\n    const { title } = this.props;\n    if (title === 'Comidas') {\n      return this.fetchFood();\n    }\n    if (title === 'Bebidas') {\n      return this.fetchBeverages();\n    }\n    return null;\n  }\n\n  render() {\n    return (\n      <form className=\"searchBar-form\">\n        <label htmlFor=\"search\">\n          <input\n            className=\"searchBar-input\"\n            type=\"text\"\n            placeholder=\"Buscar receita\"\n            data-testid=\"search-input\"\n            onChange={ (event) => this.onChangeInput(event, 'input') }\n            id=\"search\"\n          />\n        </label>\n        <button\n          variant=\"primary\"\n          type=\"button\"\n          data-testid=\"exec-search-btn\"\n          onClick={ () => this.OnClickSearch() }\n        >\n          Buscar\n        </button>\n        {['radio'].map((type) => (\n          <div key={ `inline-${type}` } className=\"searchBar-radio-div\">\n            <label htmlFor=\"Ingrediente\">\n              <input\n                id=\"Ingrediente\"\n                name=\"radio\"\n                value=\"Ingrediente\"\n                type={ type }\n                data-testid=\"ingredient-search-radio\"\n                onChange={ (event) => this.onChangeInput(event, 'filter') }\n              />\n              Ingrediente\n            </label>\n            <label htmlFor=\"Nome\">\n              <input\n                id=\"Nome\"\n                name=\"radio\"\n                value=\"Nome\"\n                type={ type }\n                data-testid=\"name-search-radio\"\n                onChange={ (event) => this.onChangeInput(event, 'filter') }\n              />\n              Nome\n            </label>\n            <label htmlFor=\"Primeira Letra\">\n              <input\n                id=\"Primeira Letra\"\n                name=\"radio\"\n                value=\"Primeira Letra\"\n                type={ type }\n                data-testid=\"first-letter-search-radio\"\n                onChange={ (event) => this.onChangeInput(event, 'filter') }\n              />\n              Primeira Letra\n            </label>\n          </div>\n        ))}\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  SendApiToState: (payload) => dispatch(fetchApiAction(payload)),\n});\n\nSearchBar.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  title: PropTypes.string.isRequired,\n  SendApiToState: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(withRouter(SearchBar));\n","module.exports = __webpack_public_path__ + \"static/media/drinkIcon.f87c47c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/exploreIcon.157945ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/mealIcon.b27ba19e.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form } from 'react-bootstrap';\nimport logo from '../images/logo.png';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      disabled: true,\n    };\n\n    this.validateForm = this.validateForm.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.onClickSubmit = this.onClickSubmit.bind(this);\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    if (name === 'email') {\n      this.setState({ email: value }, this.validateForm);\n    }\n    if (name === 'password') {\n      this.setState({ password: value }, this.validateForm);\n    }\n  }\n\n  onClickSubmit() {\n    const { history } = this.props;\n    const { email } = this.state;\n    localStorage.setItem('mealsToken', 1);\n    localStorage.setItem('cocktailsToken', 1);\n    localStorage.setItem('user', JSON.stringify({ email }));\n    history.push('/comidas');\n  }\n\n  alertMessage() {\n    const text = 'A proporção recomendada para a visualização é de: 360x640, você pode altera-la inspecionando a página, pressionando \"Ctrl + shift + M\" e selecionando o dispositivo \"Moto G4\".';\n    return alert(text);\n  }\n\n  validateForm() {\n    const { email, password } = this.state;\n    const emailRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n    const seisCaracteres = 6;\n    if ((emailRegex.test(email)) && (password.length > seisCaracteres)) {\n      this.setState({ disabled: false });\n    } else {\n      this.setState({ disabled: true });\n    }\n  }\n\n  render() {\n    const { disabled } = this.state;\n    return (\n      <div className=\"login-background\">\n        <img className=\"logo-img\" src={ logo } alt=\"Logo Ta na Mesa\" />\n        { this.alertMessage() }\n        <Form>\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label className=\"label-login\">Email</Form.Label>\n            <Form.Control\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Digite seu email\"\n              data-testid=\"email-input\"\n              onChange={ this.handleChange }\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label className=\"label-login\">Senha</Form.Label>\n            <Form.Control\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"Digite sua senha\"\n              data-testid=\"password-input\"\n              onChange={ this.handleChange }\n            />\n          </Form.Group>\n          <button\n            variant=\"primary\"\n            className=\"button-login\"\n            type=\"button\"\n            data-testid=\"login-submit-btn\"\n            disabled={ disabled }\n            onClick={ this.onClickSubmit }\n          >\n            Entrar\n          </button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default Login;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport searchIcon from '../images/searchIcon.svg';\nimport profileIcon from '../images/profileIcon.svg';\nimport SearchBar from './SearchBar';\n\nclass Header extends React.Component {\n  constructor() {\n    super();\n    this.renderSearchButton = this.renderSearchButton.bind(this);\n    this.onClickSearchBtn = this.onClickSearchBtn.bind(this);\n    this.state = {\n      searchBar: false,\n    };\n  }\n\n  onClickSearchBtn() {\n    this.setState((prev) => ({\n      searchBar: !prev.searchBar,\n    }));\n  }\n\n  renderSearchButton() {\n    const { title } = this.props;\n    if (title === 'Comidas' || title === 'Bebidas' || title === 'Explorar Origem') {\n      return (\n        <button type=\"button\" onClick={ this.onClickSearchBtn } className=\"header-icon\">\n          <img\n            src={ searchIcon }\n            alt=\"search\"\n            data-testid=\"search-top-btn\"\n          />\n        </button>\n      );\n    }\n    return null;\n  }\n\n  render() {\n    const { title } = this.props;\n    const { searchBar } = this.state;\n    return (\n      <nav className=\"header\">\n        <Link to=\"/perfil\">\n          <img\n            src={ profileIcon }\n            alt=\"profile\"\n            data-testid=\"profile-top-btn\"\n            className=\"header-icon\"\n          />\n        </Link>\n        <h1 data-testid=\"page-title\">{ title }</h1>\n        { this.renderSearchButton() }\n        { searchBar ? <SearchBar title={ title } /> : null }\n      </nav>\n    );\n  }\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport { drinkIngredients, foodIngredients } from '../redux/actions';\nimport drinkIcon from '../images/drinkIcon.svg';\nimport exploreIcon from '../images/exploreIcon.svg';\nimport mealIcon from '../images/mealIcon.svg';\n\nclass Footer extends React.Component {\n  constructor() {\n    super();\n    this.onClickButton = this.onClickButton.bind(this);\n  }\n\n  async onClickButton(callback, redirect) {\n    const { history } = this.props;\n    await callback(null);\n    history.push(`/${redirect}`);\n  }\n\n  render() {\n    const { alterFoodIngredientsKey, alterDrinkIngredientsKey } = this.props;\n    return (\n      <nav data-testid=\"footer\" className=\"footer-navBar\">\n        <button\n          type=\"button\"\n          onClick={ () => this.onClickButton(alterDrinkIngredientsKey, 'bebidas') }\n        >\n          <img\n            src={ drinkIcon }\n            alt=\"Drink\"\n            data-testid=\"drinks-bottom-btn\"\n            className=\"footer-icon\"\n          />\n        </button>\n        <Link to=\"/explorar\">\n          <img\n            src={ exploreIcon }\n            alt=\"Explore\"\n            data-testid=\"explore-bottom-btn\"\n            className=\"footer-icon\"\n          />\n        </Link>\n        <button\n          type=\"button\"\n          onClick={ () => this.onClickButton(alterFoodIngredientsKey, 'comidas') }\n        >\n          <img\n            src={ mealIcon }\n            alt=\"Meal\"\n            data-testid=\"food-bottom-btn\"\n            className=\"footer-icon\"\n          />\n        </button>\n      </nav>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  alterDrinkIngredientsKey: (payload) => dispatch(drinkIngredients(payload)),\n  alterFoodIngredientsKey: (payload) => dispatch(foodIngredients(payload)),\n});\n\nFooter.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  alterDrinkIngredientsKey: PropTypes.func.isRequired,\n  alterFoodIngredientsKey: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(withRouter(Footer));\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport { fetchApiAction } from '../redux/actions';\nimport fetchAPI from '../services/fetchApi';\n\nclass Food extends React.Component {\n  constructor() {\n    super();\n    this.renderCards = this.renderCards.bind(this);\n    this.renderCategories = this.renderCategories.bind(this);\n    this.fetchCategories = this.fetchCategories.bind(this);\n    this.onClickCategoryBtn = this.onClickCategoryBtn.bind(this);\n    this.state = {\n      categoriesList: [],\n      apiEndPoint: 'search.php?s=',\n    };\n  }\n\n  componentDidMount() {\n    this.fetchFood();\n    return this.fetchCategories();\n  }\n\n  onClickCategoryBtn({ target }) {\n    const originalEndPoint = 'search.php?s=';\n    const { apiEndPoint } = this.state;\n    if (target.name === 'all') {\n      return this.setState({\n        apiEndPoint: originalEndPoint,\n      }, () => this.fetchFood());\n    }\n    if (apiEndPoint !== `filter.php?c=${target.name}`) {\n      return this.setState({\n        apiEndPoint: `filter.php?c=${target.name}`,\n      }, () => this.fetchFood());\n    }\n    return this.setState({\n      apiEndPoint: originalEndPoint,\n    }, () => this.fetchFood());\n  }\n\n  async fetchCategories() {\n    const url = 'https://www.themealdb.com/api/json/v1/1/list.php?c=list';\n    const responseAPI = await fetchAPI(url);\n    const { meals } = responseAPI;\n    this.setState({\n      categoriesList: meals,\n    });\n  }\n\n  async fetchFood() {\n    const { SendApiToState, foodIngredientRedux } = this.props;\n    const { apiEndPoint } = this.state;\n    let url = `https://www.themealdb.com/api/json/v1/1/${apiEndPoint}`;\n    if (foodIngredientRedux !== null) url = `https://www.themealdb.com/api/json/v1/1/filter.php?i=${foodIngredientRedux}`;\n    const responseAPI = await fetchAPI(url);\n    SendApiToState(responseAPI);\n  }\n\n  renderCategories() {\n    const { categoriesList } = this.state;\n    const maxCategories = 4;\n    return categoriesList.map((category, index) => {\n      if (index <= maxCategories) {\n        return (\n          <button\n            name={ category.strCategory }\n            key={ category.strCategory }\n            type=\"button\"\n            data-testid={ `${category.strCategory}-category-filter` }\n            onClick={ this.onClickCategoryBtn }\n            className=\"main-btn\"\n          >\n            { category.strCategory }\n          </button>\n        );\n      }\n      return null;\n    });\n  }\n\n  renderCards() {\n    const { resultsApi: { meals } } = this.props;\n    const maxNumberOfCards = 11;\n    if (meals !== null) {\n      return meals.map((food, index) => {\n        if (index <= maxNumberOfCards) {\n          return (\n            <Link key={ index } to={ `/comidas/${food.idMeal}` }>\n              <div data-testid={ `${index}-recipe-card` } className=\"main-cards-div\">\n                <div className=\"main-card-background\" />\n                <h3 data-testid={ `${index}-card-name` }>{ food.strMeal }</h3>\n                <img\n                  src={ food.strMealThumb }\n                  alt={ food.strMeal }\n                  data-testid={ `${index}-card-img` }\n                />\n              </div>\n            </Link>\n          );\n        }\n        return null;\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Header title=\"Comidas\" />\n        <section className=\"main-btn-section\">\n          <button\n            name=\"all\"\n            type=\"button\"\n            data-testid=\"All-category-filter\"\n            onClick={ this.onClickCategoryBtn }\n            className=\"main-btn\"\n          >\n            All\n          </button>\n          { this.renderCategories() }\n        </section>\n        <section className=\"main-cards-section\">\n          { this.renderCards() }\n        </section>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  resultsApi: state.data.resultAPI,\n  foodIngredientRedux: state.data.resultAPI.foodIngredient,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  SendApiToState: (payload) => dispatch(fetchApiAction(payload)),\n});\n\nFood.propTypes = {\n  resultsApi: PropTypes.shape({\n    meals: PropTypes.arrayOf(PropTypes.object).isRequired,\n  }).isRequired,\n  SendApiToState: PropTypes.func.isRequired,\n  foodIngredientRedux: PropTypes.string.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Food);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport { fetchApiAction } from '../redux/actions';\nimport fetchAPI from '../services/fetchApi';\n\nclass Beverages extends React.Component {\n  constructor() {\n    super();\n    this.renderCards = this.renderCards.bind(this);\n    this.renderCategories = this.renderCategories.bind(this);\n    this.fetchCategories = this.fetchCategories.bind(this);\n    this.onClickCategoryBtn = this.onClickCategoryBtn.bind(this);\n    this.state = {\n      categoriesList: [],\n      apiEndPoint: 'search.php?s=',\n    };\n  }\n\n  componentDidMount() {\n    this.fetchBeverages();\n    return this.fetchCategories();\n  }\n\n  onClickCategoryBtn({ target }) {\n    const originalEndPoint = 'search.php?s=';\n    const { apiEndPoint } = this.state;\n    if (target.name === 'all') {\n      return this.setState({\n        apiEndPoint: originalEndPoint,\n      }, () => this.fetchBeverages());\n    }\n    if (apiEndPoint !== `filter.php?c=${target.name}`) {\n      return this.setState({\n        apiEndPoint: `filter.php?c=${target.name}`,\n      }, () => this.fetchBeverages());\n    }\n    this.setState({\n      apiEndPoint: originalEndPoint,\n    }, () => this.fetchBeverages());\n  }\n\n  async fetchCategories() {\n    const url = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list';\n    const responseAPI = await fetchAPI(url);\n    const { drinks } = responseAPI;\n    this.setState({\n      categoriesList: drinks,\n    });\n  }\n\n  async fetchBeverages() {\n    const { SendApiToState, drinkIngredientRedux } = this.props;\n    const { apiEndPoint } = this.state;\n    let url = `https://www.thecocktaildb.com/api/json/v1/1/${apiEndPoint}`;\n    if (drinkIngredientRedux !== null) url = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${drinkIngredientRedux}`;\n    const responseAPI = await fetchAPI(url);\n    SendApiToState(responseAPI);\n  }\n\n  renderCategories() {\n    const { categoriesList } = this.state;\n    const maxCategories = 4;\n    return categoriesList.map((category, index) => {\n      if (index <= maxCategories) {\n        return (\n          <button\n            name={ category.strCategory }\n            key={ category.strCategory }\n            type=\"button\"\n            data-testid={ `${category.strCategory}-category-filter` }\n            onClick={ this.onClickCategoryBtn }\n            className=\"main-btn drinks-btn\"\n          >\n            { category.strCategory }\n          </button>\n        );\n      }\n      return null;\n    });\n  }\n\n  renderCards() {\n    const { resultsApi: { drinks } } = this.props;\n    const maxNumberOfCards = 11;\n    if (drinks !== null) {\n      return drinks.map((drink, index) => {\n        if (index <= maxNumberOfCards) {\n          return (\n            <Link to={ `/bebidas/${drink.idDrink}` } key={ index }>\n              <div\n                key={ index }\n                data-testid={ `${index}-recipe-card` }\n                className=\"main-cards-div\"\n              >\n                <h3 data-testid={ `${index}-card-name` }>\n                  { drink.strDrink }\n                </h3>\n                <div className=\"main-card-background\" />\n                <img\n                  src={ drink.strDrinkThumb }\n                  alt={ drink.strDrink }\n                  data-testid={ `${index}-card-img` }\n                  width=\"150px\"\n                  className=\"drinks-img\"\n                />\n              </div>\n            </Link>\n          );\n        }\n        return null;\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Header title=\"Bebidas\" />\n        <section className=\"main-btn-section drinks-section\">\n          <button\n            name=\"all\"\n            type=\"button\"\n            data-testid=\"All-category-filter\"\n            onClick={ this.onClickCategoryBtn }\n            className=\"main-btn drinks-btn\"\n          >\n            All\n          </button>\n          { this.renderCategories() }\n        </section>\n        <section className=\"main-cards-section drink-cards-section\">\n          { this.renderCards() }\n        </section>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  resultsApi: state.data.resultAPI,\n  drinkIngredientRedux: state.data.resultAPI.drinkIngredient,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  SendApiToState: (payload) => dispatch(fetchApiAction(payload)),\n});\n\nBeverages.propTypes = {\n  resultsApi: PropTypes.shape({\n    drinks: PropTypes.arrayOf(PropTypes.object).isRequired,\n  }).isRequired,\n  SendApiToState: PropTypes.func.isRequired,\n  drinkIngredientRedux: PropTypes.string.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Beverages);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport fetchAPI from '../services/fetchApi';\n\nclass Recommendations extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      recommendedRecipe: [],\n    };\n    this.renderRecommendedFood = this.renderRecommendedFood.bind(this);\n    this.renderRecommendedDrinks = this.renderRecommendedDrinks.bind(this);\n    this.renderRecommended = this.renderRecommended.bind(this);\n    this.fetchRecommended = this.fetchRecommended.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchRecommended();\n  }\n\n  async fetchRecommended() {\n    const { api } = this.props;\n    if (api === 'meal') {\n      const url = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n      const responseAPI = await fetchAPI(url);\n      const { meals } = responseAPI;\n      return this.setState({\n        recommendedRecipe: meals,\n      });\n    }\n    const url = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n    const responseAPI = await fetchAPI(url);\n    const { drinks } = responseAPI;\n    return this.setState({\n      recommendedRecipe: drinks,\n    });\n  }\n\n  renderRecommendedFood() {\n    const { recommendedRecipe } = this.state;\n    const RECOMMENDED_CARDS = 6;\n    return recommendedRecipe.map((meal, index) => {\n      if (index < RECOMMENDED_CARDS) {\n        return (\n          <div\n            data-testid={ `${index}-recomendation-card` }\n            key={ index }\n          >\n            <h2 data-testid={ `${index}-recomendation-title` }>\n              { meal.strMeal }\n            </h2>\n            <p>\n              { meal.strCategory }\n            </p>\n            <img src={ meal.strMealThumb } alt={ meal.strMeal } width=\"150px\" />\n          </div>\n        );\n      }\n      return null;\n    });\n  }\n\n  renderRecommendedDrinks() {\n    const { recommendedRecipe } = this.state;\n    const RECOMMENDED_CARDS = 6;\n    return recommendedRecipe.map((drink, index) => {\n      if (index < RECOMMENDED_CARDS) {\n        return (\n          <div\n            data-testid={ `${index}-recomendation-card` }\n            key={ index }\n            className=\"visible-card\"\n          >\n            <img src={ drink.strDrinkThumb } alt={ drink.strDrink } width=\"150px\" />\n            <h2 data-testid={ `${index}-recomendation-title` }>\n              { drink.strDrink }\n            </h2>\n            <p>\n              { drink.strCategory }\n            </p>\n          </div>\n        );\n      }\n      return null;\n    });\n  }\n\n  renderRecommended() {\n    const { api } = this.props;\n    if (api === 'meal') {\n      return this.renderRecommendedFood();\n    }\n    return this.renderRecommendedDrinks();\n  }\n\n  render() {\n    const { recommendedRecipe } = this.state;\n    if (recommendedRecipe.length === 0) {\n      return <div>Carregando</div>;\n    }\n    return (\n      <section className=\"recommended-main-section\">\n        <h2 className=\"recommended-cards-title\">Recomendações</h2>\n        <section className=\"recommended-cards-section\">\n          { this.renderRecommended() }\n        </section>\n      </section>\n    );\n  }\n}\n\nRecommendations.propTypes = {\n  api: PropTypes.string.isRequired,\n};\n\nexport default Recommendations;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Iframe from 'react-iframe';\nimport copy from 'clipboard-copy';\nimport fetchAPI from '../services/fetchApi';\nimport shareIcon from '../images/shareIcon.svg';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport Recommendations from '../components/Recommendations';\n\nclass FoodRecipe extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      detailsRecipe: [],\n      copyLink: false,\n      isFavorite: false,\n    };\n\n    this.fetchDetails = this.fetchDetails.bind(this);\n    this.renderVideo = this.renderVideo.bind(this);\n    this.renderRecipeBtn = this.renderRecipeBtn.bind(this);\n    this.onClickShare = this.onClickShare.bind(this);\n    this.onClickFavoriteIcon = this.onClickFavoriteIcon.bind(this);\n    this.renderHeartIcon = this.renderHeartIcon.bind(this);\n    this.renderFavorite = this.renderFavorite.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchDetails();\n    this.renderHeartIcon();\n  }\n\n  onClickShare() {\n    copy(window.location.href);\n    this.setState({\n      copyLink: true,\n    });\n  }\n\n  onClickFavoriteIcon() {\n    const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const { match: { params: { id } } } = this.props;\n    const { detailsRecipe } = this.state;\n    const newFavorite = {\n      id,\n      type: 'comida',\n      area: detailsRecipe[0].strArea,\n      category: detailsRecipe[0].strCategory,\n      alcoholicOrNot: '',\n      name: detailsRecipe[0].strMeal,\n      image: detailsRecipe[0].strMealThumb,\n    };\n    if (favoriteRecipes) {\n      const isFavorite = favoriteRecipes.find((recipe) => recipe.id === id);\n      if (isFavorite) {\n        this.setState({\n          isFavorite: false,\n        });\n        const newArray = favoriteRecipes.filter((recipe) => recipe.id !== id);\n        return localStorage.setItem('favoriteRecipes', JSON.stringify(newArray));\n      }\n      this.setState({\n        isFavorite: true,\n      });\n      const addFavorite = [...favoriteRecipes, newFavorite];\n      return localStorage.setItem('favoriteRecipes', JSON.stringify(addFavorite));\n    }\n    this.setState({\n      isFavorite: true,\n    });\n    return localStorage.setItem('favoriteRecipes', JSON.stringify([newFavorite]));\n  }\n\n  async fetchDetails() {\n    const { match: { params: { id } } } = this.props;\n    const url = `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`;\n    const responseAPI = await fetchAPI(url);\n    const { meals } = responseAPI;\n    this.setState({\n      detailsRecipe: meals,\n    });\n  }\n\n  renderVideo() {\n    const { detailsRecipe } = this.state;\n    const url = detailsRecipe[0].strYoutube;\n    const split = url.split('watch');\n    return `${split[0]}embed${split[1]}`;\n  }\n\n  renderIngredients() {\n    const { detailsRecipe } = this.state;\n    const NUMBER_OF_INGREDIENTS = 20;\n    const arrayIngredients = [];\n    for (let index = 1; index < NUMBER_OF_INGREDIENTS; index += 1) {\n      arrayIngredients.push(index);\n    }\n    return arrayIngredients.map((position) => {\n      const ingredients = detailsRecipe[0][`strIngredient${position}`];\n      const measure = detailsRecipe[0][`strMeasure${position}`];\n      if (ingredients === '' || ingredients === null) {\n        return null;\n      }\n      return (\n        <li\n          key={ position }\n          data-testid={ `${position - 1}-ingredient-name-and-measure` }\n        >\n          {`${measure} ${ingredients}`}\n        </li>\n      );\n    });\n  }\n\n  renderRecipeBtn() {\n    const { match: { params: { id } }, history } = this.props;\n    const recipesDone = JSON.parse(localStorage.getItem('doneRecipes'));\n    if (recipesDone) {\n      const isDone = recipesDone.find((recipe) => recipe.id === id);\n      if (isDone) {\n        return null;\n      }\n      return (\n        <button\n          data-testid=\"start-recipe-btn\"\n          className=\"start-recipe-btn\"\n          type=\"button\"\n          onClick={ () => history.push(`/comidas/${id}/in-progress`) }\n        >\n          Iniciar Receita\n        </button>\n      );\n    }\n    const recipesInProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    if (recipesInProgress && recipesInProgress.meals[id]) {\n      return (\n        <button\n          data-testid=\"start-recipe-btn\"\n          className=\"start-recipe-btn\"\n          type=\"button\"\n          onClick={ () => history.push(`/comidas/${id}/in-progress`) }\n        >\n          Continuar Receita\n        </button>\n      );\n    }\n    return (\n      <button\n        data-testid=\"start-recipe-btn\"\n        className=\"start-recipe-btn\"\n        type=\"button\"\n        onClick={ () => history.push(`/comidas/${id}/in-progress`) }\n      >\n        Iniciar Receita\n      </button>\n    );\n  }\n\n  renderHeartIcon() {\n    const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const { match: { params: { id } } } = this.props;\n    if (favoriteRecipes) {\n      const isFavorite = favoriteRecipes.find((recipe) => recipe.id === id);\n      if (isFavorite) {\n        return this.setState({\n          isFavorite: true,\n        });\n      }\n      return this.setState({\n        isFavorite: false,\n      });\n    }\n    return this.setState({\n      isFavorite: false,\n    });\n  }\n\n  renderFavorite() {\n    const { isFavorite } = this.state;\n    if (isFavorite) {\n      return (\n        <img src={ blackHeartIcon } alt=\"favorito\" data-testid=\"favorite-btn\" />\n      );\n    }\n    return (\n      <img src={ whiteHeartIcon } alt=\"favorito\" data-testid=\"favorite-btn\" />\n    );\n  }\n\n  render() {\n    const { detailsRecipe, copyLink } = this.state;\n    if (detailsRecipe.length === 0) {\n      return <div>Carregando</div>;\n    }\n    return (\n      <section className=\"detail-main-section\">\n        <img\n          src={ detailsRecipe[0].strMealThumb }\n          alt={ detailsRecipe[0].strMeal }\n          data-testid=\"recipe-photo\"\n          width=\"150px\"\n          className=\"detail-img\"\n        />\n        <section className=\"header-detail-section\">\n          <h1 data-testid=\"recipe-title\">{detailsRecipe[0].strMeal}</h1>\n          <p data-testid=\"recipe-category\">{detailsRecipe[0].strCategory}</p>\n          <div>\n            <p>{copyLink ? 'Link copiado!' : null}</p>\n            <button\n              data-testid=\"share-btn\"\n              type=\"button\"\n              onClick={ this.onClickShare }\n            >\n              <img src={ shareIcon } alt=\"Compartilhar\" />\n            </button>\n            <button type=\"button\" onClick={ this.onClickFavoriteIcon }>\n              {this.renderFavorite()}\n            </button>\n          </div>\n        </section>\n        <h3>Ingredientes</h3>\n        <ul>{this.renderIngredients()}</ul>\n        <div className=\"hr\" />\n        <p data-testid=\"instructions\" className=\"instructions\">\n          {detailsRecipe[0].strInstructions}\n        </p>\n        <div data-testid=\"video\" className=\"video\">\n          <Iframe width=\"280\" height=\"150\" url={ this.renderVideo() } />\n        </div>\n        <Recommendations api=\"drinks\" />\n        {this.renderRecipeBtn()}\n      </section>\n    );\n  }\n}\n\nFoodRecipe.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default FoodRecipe;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'clipboard-copy';\nimport Recommendations from '../components/Recommendations';\nimport fetchAPI from '../services/fetchApi';\nimport shareIcon from '../images/shareIcon.svg';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\n\nclass BeverageRecipe extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      detailsRecipe: [],\n      copyLink: false,\n      isFavorite: false,\n    };\n\n    this.fetchDetails = this.fetchDetails.bind(this);\n    this.onClickShare = this.onClickShare.bind(this);\n    this.onClickFavoriteIcon = this.onClickFavoriteIcon.bind(this);\n    this.renderHeartIcon = this.renderHeartIcon.bind(this);\n    this.renderFavorite = this.renderFavorite.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchDetails();\n    return this.renderHeartIcon();\n  }\n\n  onClickShare() {\n    copy(window.location.href);\n    this.setState({\n      copyLink: true,\n    });\n  }\n\n  onClickFavoriteIcon() {\n    const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const { match: { params: { id } } } = this.props;\n    const { detailsRecipe } = this.state;\n    const newFavorite = {\n      id,\n      type: 'bebida',\n      area: '',\n      category: detailsRecipe[0].strCategory,\n      alcoholicOrNot: detailsRecipe[0].strAlcoholic,\n      name: detailsRecipe[0].strDrink,\n      image: detailsRecipe[0].strDrinkThumb,\n    };\n    if (favoriteRecipes) {\n      const isFavorite = favoriteRecipes.find((recipe) => recipe.id === id);\n      if (isFavorite) {\n        this.setState({\n          isFavorite: false,\n        });\n        const newArray = favoriteRecipes.filter((recipe) => recipe.id !== id);\n        return localStorage.setItem('favoriteRecipes', JSON.stringify(newArray));\n      }\n      this.setState({\n        isFavorite: true,\n      });\n      const addFavorite = [...favoriteRecipes, newFavorite];\n      return localStorage.setItem('favoriteRecipes', JSON.stringify(addFavorite));\n    }\n    this.setState({\n      isFavorite: true,\n    });\n    return localStorage.setItem('favoriteRecipes', JSON.stringify([newFavorite]));\n  }\n\n  async fetchDetails() {\n    const { match: { params: { id } } } = this.props;\n    const url = `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`;\n    const responseAPI = await fetchAPI(url);\n    const { drinks } = responseAPI;\n    this.setState({\n      detailsRecipe: drinks,\n    });\n  }\n\n  renderIngredients() {\n    const { detailsRecipe } = this.state;\n    const NUMBER_OF_INGREDIENTS = 20;\n    const arrayIngredients = [];\n    for (let index = 1; index < NUMBER_OF_INGREDIENTS; index += 1) {\n      arrayIngredients.push(index);\n    }\n    return arrayIngredients.map((position) => {\n      const ingredients = detailsRecipe[0][`strIngredient${position}`];\n      const measure = detailsRecipe[0][`strMeasure${position}`];\n      if (ingredients === undefined || ingredients === null || ingredients === '') {\n        return null;\n      }\n      return (\n        <li\n          key={ position }\n          data-testid={ `${position - 1}-ingredient-name-and-measure` }\n        >\n          {`${measure} of ${ingredients}`}\n        </li>\n      );\n    });\n  }\n\n  renderRecipeBtn() {\n    const { match: { params: { id } }, history } = this.props;\n    const recipesDone = JSON.parse(localStorage.getItem('doneRecipes'));\n    if (recipesDone) {\n      const isDone = recipesDone.find((recipe) => recipe.id === id);\n      if (isDone) {\n        return null;\n      }\n      return (\n        <button\n          data-testid=\"start-recipe-btn\"\n          className=\"start-recipe-btn\"\n          type=\"button\"\n          onClick={ () => history.push(`/bebidas/${id}/in-progress`) }\n        >\n          Iniciar Receita\n        </button>\n      );\n    }\n    const recipesInProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    if (recipesInProgress && recipesInProgress.cocktails[id]) {\n      return (\n        <button\n          data-testid=\"start-recipe-btn\"\n          className=\"start-recipe-btn\"\n          type=\"button\"\n          onClick={ () => history.push(`/bebidas/${id}/in-progress`) }\n        >\n          Continuar Receita\n        </button>\n      );\n    }\n    return (\n      <button\n        data-testid=\"start-recipe-btn\"\n        className=\"start-recipe-btn\"\n        type=\"button\"\n        onClick={ () => history.push(`/bebidas/${id}/in-progress`) }\n      >\n        Iniciar Receita\n      </button>\n    );\n  }\n\n  renderHeartIcon() {\n    const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const { match: { params: { id } } } = this.props;\n    if (favoriteRecipes) {\n      const isFavorite = favoriteRecipes.find((recipe) => recipe.id === id);\n      if (isFavorite) {\n        return this.setState({\n          isFavorite: true,\n        });\n      }\n      return this.setState({\n        isFavorite: false,\n      });\n    }\n    return this.setState({\n      isFavorite: false,\n    });\n  }\n\n  renderFavorite() {\n    const { isFavorite } = this.state;\n    if (isFavorite) {\n      return (\n        <img src={ blackHeartIcon } alt=\"favorito\" data-testid=\"favorite-btn\" />\n      );\n    }\n    return (\n      <img src={ whiteHeartIcon } alt=\"favorito\" data-testid=\"favorite-btn\" />\n    );\n  }\n\n  render() {\n    const { detailsRecipe, copyLink } = this.state;\n    if (!detailsRecipe || detailsRecipe.length === 0) {\n      return <div>Carregando</div>;\n    }\n    return (\n      <section className=\"detail-main-section\">\n        <img\n          src={ detailsRecipe[0].strDrinkThumb }\n          alt={ detailsRecipe[0].strDrink }\n          data-testid=\"recipe-photo\"\n          width=\"150px\"\n          className=\"detail-img\"\n        />\n        <section className=\"header-detail-section\">\n          <h1 data-testid=\"recipe-title\">\n            {detailsRecipe[0].strDrink}\n          </h1>\n          <p data-testid=\"recipe-category\">\n            {`${detailsRecipe[0].strCategory} ${detailsRecipe[0].strAlcoholic}`}\n          </p>\n          <div>\n            <p>{copyLink ? 'Link copiado!' : null}</p>\n            <button\n              data-testid=\"share-btn\"\n              type=\"button\"\n              onClick={ this.onClickShare }\n            >\n              <img src={ shareIcon } alt=\"Compartilhar\" />\n            </button>\n            <button type=\"button\" onClick={ this.onClickFavoriteIcon }>\n              {this.renderFavorite()}\n            </button>\n          </div>\n        </section>\n        <h3>Ingredientes</h3>\n        <ul>{this.renderIngredients()}</ul>\n        <div className=\"hr\" />\n        <p data-testid=\"instructions\" className=\"instructions\">\n          {detailsRecipe[0].strInstructions}\n        </p>\n        <Recommendations api=\"meal\" />\n        {this.renderRecipeBtn()}\n      </section>\n    );\n  }\n}\n\nBeverageRecipe.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default BeverageRecipe;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport PropTypes from 'prop-types';\nimport shareIcon from '../images/shareIcon.svg';\n\nclass FoodInProgressInfo extends Component {\n  constructor() {\n    super();\n    this.onClickFinishRecipe = this.onClickFinishRecipe.bind(this);\n  }\n\n  onClickFinishRecipe() {\n    const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n    const { match: { params: { id } }, detailsRecipe } = this.props;\n    const today = new Date();\n    const day = today.getDate();\n    const month = today.getMonth();\n    const year = today.getFullYear();\n    const currentDate = `${day}/0${month + 1}/${year}`;\n    const newRecipe = {\n      id,\n      type: 'comida',\n      area: detailsRecipe[0].strArea,\n      category: detailsRecipe[0].strCategory,\n      alcoholicOrNot: '',\n      name: detailsRecipe[0].strMeal,\n      image: detailsRecipe[0].strMealThumb,\n      doneDate: currentDate,\n      tags: [detailsRecipe[0].strTags],\n    };\n    if (doneRecipes) {\n      const checkRegister = doneRecipes.filter((recipe) => recipe.id === id);\n      console.log('aqui');\n      if (checkRegister.length > 0) return null;\n      return localStorage.setItem(\n        'doneRecipes',\n        JSON.stringify([...doneRecipes, newRecipe]),\n      );\n    }\n    return localStorage.setItem(\n      'doneRecipes',\n      JSON.stringify([newRecipe]),\n    );\n  }\n\n  render() {\n    const {\n      detailsRecipe,\n      copyLink,\n      setDisable,\n      onClickShare,\n      onClickFavoriteIcon,\n      renderIngredients,\n      renderFavorite,\n    } = this.props;\n    return (\n      <section className=\"detail-main-section\">\n        <section className=\"header-detail-section\">\n          <img\n            src={ detailsRecipe[0].strMealThumb }\n            alt=\"Imagem da Bebida\"\n            data-testid=\"recipe-photo\"\n            width=\"350\"\n            className=\"detail-img\"\n          />\n          <h1 data-testid=\"recipe-title\">{detailsRecipe[0].strMeal}</h1>\n          <p data-testid=\"recipe-category\">\n            {`${detailsRecipe[0].strCategory}`}\n          </p>\n          <div>\n            <p>{copyLink ? 'Link copiado!' : null}</p>\n            <button\n              type=\"button\"\n              onClick={ onClickShare }\n            >\n              <img data-testid=\"share-btn\" src={ shareIcon } alt=\"Compartilhar\" />\n            </button>\n            <button\n              type=\"button\"\n              onClick={ onClickFavoriteIcon }\n            >\n              {renderFavorite()}\n            </button>\n          </div>\n        </section>\n        <h3>Instruções</h3>\n        <p data-testid=\"instructions\" className=\"instructions\">\n          { detailsRecipe[0].strInstructions }\n        </p>\n        <h3>Ingredientes</h3>\n        <ul>{renderIngredients()}</ul>\n        <Link to=\"/receitas-feitas\">\n          <button\n            disabled={ setDisable }\n            data-testid=\"finish-recipe-btn\"\n            type=\"button\"\n            onClick={ this.onClickFinishRecipe }\n            className=\"start-recipe-btn\"\n          >\n            Finalizar receita\n          </button>\n        </Link>\n      </section>\n    );\n  }\n}\n\nFoodInProgressInfo.propTypes = {\n  detailsRecipe: PropTypes.arrayOf(PropTypes.object).isRequired,\n  copyLink: PropTypes.bool.isRequired,\n  setDisable: PropTypes.bool.isRequired,\n  onClickShare: PropTypes.func.isRequired,\n  onClickFavoriteIcon: PropTypes.func.isRequired,\n  renderIngredients: PropTypes.func.isRequired,\n  renderFavorite: PropTypes.func.isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default withRouter(FoodInProgressInfo);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'clipboard-copy';\nimport fetchAPI from '../services/fetchApi';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport FoodInProgressInfo from '../components/FoodInProgressInfo';\n\nclass FoodInProgress extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      detailsRecipe: [],\n      isFavorite: false,\n      copyLink: false,\n      ingQuant: 0,\n      setDisable: true,\n      checkedIngredients: [],\n    };\n    this.renderIngredients = this.renderIngredients.bind(this);\n    this.handleChecked = this.handleChecked.bind(this);\n    this.fetchDetails = this.fetchDetails.bind(this);\n    this.onClickShare = this.onClickShare.bind(this);\n    this.onClickFavoriteIcon = this.onClickFavoriteIcon.bind(this);\n    this.renderFavorite = this.renderFavorite.bind(this);\n    this.handleFavoriteLocalStorage = this.handleFavoriteLocalStorage.bind(this);\n    this.verifyChecks = this.verifyChecks.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchDetails().then(() => this.renderNumber());\n    this.handleFavoriteLocalStorage();\n  }\n\n  handleChecked({ target }) {\n    const { detailsRecipe } = this.state;\n    const ing = target.name;\n    const { idMeal } = detailsRecipe[0];\n    const prevStorage = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    const notFound = -1;\n\n    if (prevStorage.meals[idMeal].indexOf(ing) === notFound) {\n      prevStorage.meals[idMeal].push(ing);\n    } else {\n      const pos = prevStorage.meals[idMeal].indexOf(ing);\n      prevStorage.meals[idMeal].splice(pos, 1);\n    }\n    this.setState({\n      checkedIngredients: prevStorage.meals[idMeal],\n    }, () => this.verifyChecks());\n    localStorage.setItem('inProgressRecipes', JSON.stringify(prevStorage));\n  }\n\n  handleFavoriteLocalStorage() {\n    const favoriteLocal = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const { match: { params: { id } } } = this.props;\n    if (favoriteLocal) {\n      favoriteLocal.map(({ id: idFood, type }) => {\n        if (type === 'comida') {\n          return (idFood === id)\n          && this.setState({ isFavorite: true });\n        }\n        return null;\n      });\n    }\n  }\n\n  onClickShare() {\n    const url = window.location.href.split('/in-progress');\n    copy(url[0]);\n    this.setState({ copyLink: true });\n  }\n\n  onClickFavoriteIcon() {\n    const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const { match: { params: { id } } } = this.props;\n    const { detailsRecipe } = this.state;\n    const newFavorite = {\n      id,\n      type: 'comida',\n      area: detailsRecipe[0].strArea,\n      category: detailsRecipe[0].strCategory,\n      alcoholicOrNot: '',\n      name: detailsRecipe[0].strMeal,\n      image: detailsRecipe[0].strMealThumb,\n    };\n    if (favoriteRecipes) {\n      const isFavorite = favoriteRecipes.find((recipe) => recipe.id === id);\n      if (isFavorite) {\n        this.setState({ isFavorite: false });\n        const newArray = favoriteRecipes.filter((recipe) => recipe.id !== id);\n        return localStorage.setItem(\n          'favoriteRecipes',\n          JSON.stringify(newArray),\n        );\n      }\n      this.setState({ isFavorite: true });\n      const addFavorite = [...favoriteRecipes, newFavorite];\n      return localStorage.setItem(\n        'favoriteRecipes',\n        JSON.stringify(addFavorite),\n      );\n    }\n    this.setState({\n      isFavorite: true,\n    });\n    return localStorage.setItem(\n      'favoriteRecipes',\n      JSON.stringify([newFavorite]),\n    );\n  }\n\n  setInitialLocal() {\n    const { match: { params: { id } } } = this.props;\n    if (localStorage.getItem('inProgressRecipes') === null) {\n      const obj = { cocktails: {}, meals: { [id]: [] } };\n      localStorage.setItem('inProgressRecipes', JSON.stringify(obj));\n    } else {\n      const prevStorage = JSON.parse(localStorage.getItem('inProgressRecipes'));\n      if (id in prevStorage.meals === false) {\n        prevStorage.meals[id] = [];\n        localStorage.setItem('inProgressRecipes', JSON.stringify(prevStorage));\n      }\n      this.setState({ checkedIngredients: prevStorage.meals[id] });\n    }\n  }\n\n  async fetchDetails() {\n    const { match: { params: { id } } } = this.props;\n    this.setInitialLocal();\n    const url = `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`;\n    const responseAPI = await fetchAPI(url);\n    const { meals } = responseAPI;\n    this.setState({ detailsRecipe: meals });\n  }\n\n  verifyChecks() {\n    const { ingQuant, checkedIngredients } = this.state;\n    if (checkedIngredients.length === (ingQuant + 1)) {\n      this.setState({ setDisable: false });\n    } else {\n      this.setState({ setDisable: true });\n    }\n  }\n\n  checkIngedients(name) {\n    const { checkedIngredients } = this.state;\n    if (checkedIngredients.includes(name)) { return true; }\n    return false;\n  }\n\n  renderFavorite() {\n    const { isFavorite } = this.state;\n    if (isFavorite) {\n      return (<img src={ blackHeartIcon } alt=\"favorito\" data-testid=\"favorite-btn\" />);\n    }\n    return (<img src={ whiteHeartIcon } alt=\"favorito\" data-testid=\"favorite-btn\" />);\n  }\n\n  renderNumber() {\n    let ingNumber = 0;\n    const { detailsRecipe } = this.state;\n    const NUMBER_OF_INGREDIENTS = 20;\n    const arrayIngredients = [];\n    for (let index = 1; index < NUMBER_OF_INGREDIENTS; index += 1) {\n      arrayIngredients.push(index);\n    }\n    return arrayIngredients.map((position, index) => {\n      const ingredients = detailsRecipe[0][`strIngredient${position}`];\n      if (ingredients === '' || ingredients === null || ingredients === undefined) {\n        return null;\n      }\n      ingNumber = index;\n      return this.setState({ ingQuant: ingNumber }, () => this.verifyChecks());\n    });\n  }\n\n  renderIngredients() {\n    const { detailsRecipe, checkedIngredients } = this.state;\n    const NUMBER_OF_INGREDIENTS = 20;\n    const arrayIngredients = [];\n    for (let index = 1; index < NUMBER_OF_INGREDIENTS; index += 1) {\n      arrayIngredients.push(index);\n    }\n    return arrayIngredients.map((position) => {\n      const ingredients = detailsRecipe[0][`strIngredient${position}`];\n      const measure = detailsRecipe[0][`strMeasure${position}`];\n      const ing = `${measure} ${ingredients}`;\n      if (ingredients === '' || ingredients === null) {\n        return null;\n      }\n      return (\n        <li\n          key={ position }\n          data-testid={ `${position - 1}-ingredient-step` }\n          className={\n            checkedIngredients.includes(`${measure} ${ingredients}`)\n              ? 'checked'\n              : null\n          }\n        >\n          <input\n            type=\"checkbox\"\n            checked={ checkedIngredients.includes(`${measure} ${ingredients}`) }\n            onChange={ this.handleChecked }\n            name={ ing }\n          />\n          {ing}\n        </li>\n      );\n    });\n  }\n\n  render() {\n    const { detailsRecipe, copyLink, setDisable } = this.state;\n    if (detailsRecipe.length === 0) {\n      return <div>Carregando</div>;\n    }\n    return (\n      <FoodInProgressInfo\n        detailsRecipe={ detailsRecipe }\n        copyLink={ copyLink }\n        setDisable={ setDisable }\n        onClickShare={ this.onClickShare }\n        onClickFavoriteIcon={ this.onClickFavoriteIcon }\n        renderIngredients={ this.renderIngredients }\n        renderFavorite={ this.renderFavorite }\n      />\n    );\n  }\n}\n\nFoodInProgress.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default FoodInProgress;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport PropTypes from 'prop-types';\nimport shareIcon from '../images/shareIcon.svg';\n\nclass BeveragesInProgressInfo extends Component {\n  constructor() {\n    super();\n    this.onClickFinishRecipe = this.onClickFinishRecipe.bind(this);\n  }\n\n  onClickFinishRecipe() {\n    const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n    const { match: { params: { id } }, detailsRecipe } = this.props;\n    const today = new Date();\n    const day = today.getDate();\n    const month = today.getMonth();\n    const year = today.getFullYear();\n    const currentDate = `${day}/0${month + 1}/${year}`;\n    const newRecipe = {\n      id,\n      type: 'bebida',\n      area: '',\n      category: detailsRecipe[0].strCategory,\n      alcoholicOrNot: detailsRecipe[0].strAlcoholic,\n      name: detailsRecipe[0].strDrink,\n      image: detailsRecipe[0].strDrinkThumb,\n      doneDate: currentDate,\n      tags: [],\n    };\n    if (doneRecipes) {\n      const checkRegister = doneRecipes.filter((recipe) => recipe.id === id);\n      if (checkRegister.length > 0) return null;\n      return localStorage.setItem(\n        'doneRecipes',\n        JSON.stringify([...doneRecipes, newRecipe]),\n      );\n    }\n    return localStorage.setItem(\n      'doneRecipes',\n      JSON.stringify([newRecipe]),\n    );\n  }\n\n  render() {\n    const {\n      detailsRecipe,\n      copyLink,\n      setDisable,\n      onClickShare,\n      onClickFavoriteIcon,\n      renderIngredients,\n      renderFavorite,\n    } = this.props;\n    return (\n      <section className=\"detail-main-section\">\n        <section className=\"header-detail-section\">\n          <img\n            src={ detailsRecipe[0].strDrinkThumb }\n            alt=\"Imagem da Bebida\"\n            data-testid=\"recipe-photo\"\n            width=\"350\"\n            className=\"detail-img\"\n          />\n          <h1 data-testid=\"recipe-title\">{detailsRecipe[0].strDrink}</h1>\n          <p data-testid=\"recipe-category\">\n            { detailsRecipe[0].strAlcoholic }\n          </p>\n          <div>\n            <p>{copyLink ? 'Link copiado!' : null}</p>\n            <button\n              type=\"button\"\n              onClick={ onClickShare }\n            >\n              <img data-testid=\"share-btn\" src={ shareIcon } alt=\"Compartilhar\" />\n            </button>\n            <button\n              type=\"button\"\n              onClick={ onClickFavoriteIcon }\n            >\n              {renderFavorite()}\n            </button>\n          </div>\n        </section>\n        <h3>Instruções</h3>\n        <p data-testid=\"instructions\" className=\"instructions\">\n          { detailsRecipe[0].strInstructions }\n        </p>\n        <h3>Ingredientes</h3>\n        <ul>{renderIngredients()}</ul>\n        <Link to=\"/receitas-feitas\">\n          <button\n            disabled={ setDisable }\n            data-testid=\"finish-recipe-btn\"\n            type=\"button\"\n            onClick={ this.onClickFinishRecipe }\n            className=\"start-recipe-btn\"\n          >\n            Finalizar receita\n          </button>\n        </Link>\n      </section>\n    );\n  }\n}\n\nBeveragesInProgressInfo.propTypes = {\n  detailsRecipe: PropTypes.arrayOf(PropTypes.object).isRequired,\n  copyLink: PropTypes.bool.isRequired,\n  setDisable: PropTypes.bool.isRequired,\n  onClickShare: PropTypes.func.isRequired,\n  onClickFavoriteIcon: PropTypes.func.isRequired,\n  renderIngredients: PropTypes.func.isRequired,\n  renderFavorite: PropTypes.func.isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default withRouter(BeveragesInProgressInfo);\n//  teste\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'clipboard-copy';\nimport fetchAPI from '../services/fetchApi';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport BeveragesInProgressInfo from '../components/BeveragesInProgressInfo';\n\nclass BeveragesInProgress extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      detailsRecipe: [],\n      isFavorite: false,\n      copyLink: false,\n      ingQuant: 0,\n      setDisable: true,\n      checkedIngredients: [],\n    };\n    this.renderIngredients = this.renderIngredients.bind(this);\n    this.handleChecked = this.handleChecked.bind(this);\n    this.fetchDetails = this.fetchDetails.bind(this);\n    this.onClickShare = this.onClickShare.bind(this);\n    this.onClickFavoriteIcon = this.onClickFavoriteIcon.bind(this);\n    this.handleFavoriteLocalStorage = this.handleFavoriteLocalStorage.bind(this);\n    this.verifyChecks = this.verifyChecks.bind(this);\n    this.renderFavorite = this.renderFavorite.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchDetails().then(() => this.renderNumber());\n    this.handleFavoriteLocalStorage();\n  }\n\n  handleChecked({ target }) {\n    const { detailsRecipe } = this.state;\n    const ing = target.name;\n    const { idDrink } = detailsRecipe[0];\n    const prevStorage = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    const notFound = -1;\n\n    if (prevStorage.cocktails[idDrink].indexOf(ing) === notFound) {\n      prevStorage.cocktails[idDrink].push(ing);\n    } else {\n      const pos = prevStorage.cocktails[idDrink].indexOf(ing);\n      prevStorage.cocktails[idDrink].splice(pos, 1);\n    }\n    this.setState({\n      checkedIngredients: prevStorage.cocktails[idDrink],\n    }, () => this.verifyChecks());\n    localStorage.setItem('inProgressRecipes', JSON.stringify(prevStorage));\n  }\n\n  handleFavoriteLocalStorage() {\n    const favoriteLocal = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const { match: { params: { id } } } = this.props;\n    if (favoriteLocal) {\n      favoriteLocal.map(({ id: idDrink, type }) => {\n        if (type === 'bebida') {\n          return (idDrink === id)\n          && this.setState({ isFavorite: true });\n        }\n        return null;\n      });\n    }\n  }\n\n  onClickShare() {\n    const url = window.location.href.split('/in-progress');\n    copy(url[0]);\n    this.setState({ copyLink: true });\n  }\n\n  onClickFavoriteIcon() {\n    const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const { match: { params: { id } } } = this.props;\n    const { detailsRecipe } = this.state;\n    const newFavorite = {\n      id,\n      type: 'bebida',\n      area: '',\n      category: detailsRecipe[0].strCategory,\n      alcoholicOrNot: detailsRecipe[0].strAlcoholic,\n      name: detailsRecipe[0].strDrink,\n      image: detailsRecipe[0].strDrinkThumb,\n    };\n    if (favoriteRecipes) {\n      const isFavorite = favoriteRecipes.find((recipe) => recipe.id === id);\n      if (isFavorite) {\n        this.setState({ isFavorite: false });\n        const newArray = favoriteRecipes.filter((recipe) => recipe.id !== id);\n        return localStorage.setItem(\n          'favoriteRecipes',\n          JSON.stringify(newArray),\n        );\n      }\n      this.setState({ isFavorite: true });\n      const addFavorite = [...favoriteRecipes, newFavorite];\n      return localStorage.setItem(\n        'favoriteRecipes',\n        JSON.stringify(addFavorite),\n      );\n    }\n    this.setState({ isFavorite: true });\n    return localStorage.setItem(\n      'favoriteRecipes',\n      JSON.stringify([newFavorite]),\n    );\n  }\n\n  setInitialLocal() {\n    const { match: { params: { id } } } = this.props;\n    if (localStorage.getItem('inProgressRecipes') === null) {\n      const obj = {\n        cocktails: {\n          [id]: [],\n        },\n        meals: {},\n      };\n      localStorage.setItem('inProgressRecipes', JSON.stringify(obj));\n    } else {\n      const prevStorage = JSON.parse(localStorage.getItem('inProgressRecipes'));\n      if (id in prevStorage.cocktails === false) {\n        prevStorage.cocktails[id] = [];\n        localStorage.setItem('inProgressRecipes', JSON.stringify(prevStorage));\n      }\n      this.setState({\n        checkedIngredients: prevStorage.cocktails[id],\n      });\n    }\n  }\n\n  async fetchDetails() {\n    const { match: { params: { id } } } = this.props;\n    this.setInitialLocal();\n    const url = `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`;\n    const responseAPI = await fetchAPI(url);\n    const { drinks } = responseAPI;\n    this.setState({ detailsRecipe: drinks });\n  }\n\n  verifyChecks() {\n    const { ingQuant, checkedIngredients } = this.state;\n    if (checkedIngredients.length === (ingQuant + 1)) {\n      this.setState({ setDisable: false });\n    } else {\n      this.setState({ setDisable: true });\n    }\n  }\n\n  renderNumber() {\n    let ingNumber = 0;\n    const { detailsRecipe } = this.state;\n    const NUMBER_OF_INGREDIENTS = 20;\n    const arrayIngredients = [];\n    for (let index = 1; index < NUMBER_OF_INGREDIENTS; index += 1) {\n      arrayIngredients.push(index);\n    }\n    return arrayIngredients.map((position, index) => {\n      const ingredients = detailsRecipe[0][`strIngredient${position}`];\n      if (ingredients === '' || ingredients === null || ingredients === undefined) {\n        return null;\n      }\n      ingNumber = index;\n      return this.setState({ ingQuant: ingNumber }, () => this.verifyChecks());\n    });\n  }\n\n  renderFavorite() {\n    const { isFavorite } = this.state;\n    if (isFavorite) {\n      return (\n        <img src={ blackHeartIcon } alt=\"favorito\" data-testid=\"favorite-btn\" />\n      );\n    }\n    return (\n      <img src={ whiteHeartIcon } alt=\"favorito\" data-testid=\"favorite-btn\" />\n    );\n  }\n\n  renderIngredients() {\n    const { detailsRecipe, checkedIngredients } = this.state;\n    const NUMBER_OF_INGREDIENTS = 20;\n    const arrayIngredients = [];\n    for (let index = 1; index < NUMBER_OF_INGREDIENTS; index += 1) {\n      arrayIngredients.push(index);\n    }\n    return arrayIngredients.map((position) => {\n      const ingredients = detailsRecipe[0][`strIngredient${position}`];\n      const measure = detailsRecipe[0][`strMeasure${position}`];\n      const ing = `${measure} ${ingredients}`;\n      if (ingredients === '' || ingredients === null || ingredients === undefined) {\n        return null;\n      }\n      return (\n        <li\n          key={ position }\n          data-testid={ `${position - 1}-ingredient-step` }\n          className={ checkedIngredients.includes(ing) ? 'checked' : null }\n        >\n          <input\n            type=\"checkbox\"\n            checked={ checkedIngredients.includes(`${measure} ${ingredients}`) }\n            onChange={ this.handleChecked }\n            name={ ing }\n          />\n          {ing}\n        </li>\n      );\n    });\n  }\n\n  render() {\n    const { detailsRecipe, copyLink, setDisable } = this.state;\n    if (detailsRecipe.length === 0) {\n      return <div>Carregando</div>;\n    }\n    return (\n      <BeveragesInProgressInfo\n        detailsRecipe={ detailsRecipe }\n        copyLink={ copyLink }\n        setDisable={ setDisable }\n        onClickShare={ this.onClickShare }\n        onClickFavoriteIcon={ this.onClickFavoriteIcon }\n        renderIngredients={ this.renderIngredients }\n        renderFavorite={ this.renderFavorite }\n      />\n    );\n  }\n}\n\nBeveragesInProgress.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default BeveragesInProgress;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\n\nclass Explore extends React.Component {\n  render() {\n    return (\n      <section>\n        <Header title=\"Explorar\" />\n        <section className=\"explore-cards-section\">\n          <Link to=\"/explorar/comidas\" className=\"explore\">\n            <button type=\"button\" data-testid=\"explore-food\" className=\"main-cards-div\">\n              <h3>Explorar Comidas</h3>\n              <div className=\"explore-meal-img\" />\n              <div className=\"main-card-background explore-background\" />\n            </button>\n          </Link>\n          <Link to=\"/explorar/bebidas\" className=\"explore\">\n            <button type=\"button\" data-testid=\"explore-drinks\" className=\"main-cards-div\">\n              <h3>Explorar Bebidas</h3>\n              <div className=\"explore-drinks-img\" />\n              <div className=\"main-card-background explore-background\" />\n            </button>\n          </Link>\n        </section>\n        <Footer />\n      </section>\n    );\n  }\n}\n\nexport default Explore;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport fetchAPI from '../services/fetchApi';\n\nclass ExploreFood extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      randomId: '',\n    };\n    this.fetchRandom = this.fetchRandom.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchRandom();\n  }\n\n  async fetchRandom() {\n    const url = 'https://www.themealdb.com/api/json/v1/1/random.php';\n    const random = await fetchAPI(url);\n    const randomId = random.meals[0].idMeal;\n    this.setState({\n      randomId,\n    });\n  }\n\n  render() {\n    const { randomId } = this.state;\n    const url = `/comidas/${randomId}`;\n    return (\n      <section>\n        <Header title=\"Explorar Comidas\" />\n        <section className=\"explore-cards-section\">\n          <Link to=\"/explorar/comidas/ingredientes\" className=\"explore-food\">\n            <button\n              type=\"button\"\n              data-testid=\"explore-by-ingredient\"\n              className=\"main-cards-div\"\n            >\n              <h3>Por Ingredientes</h3>\n              <img src=\"https://cdn-a.william-reed.com/var/wrbm_gb_food_pharma/storage/images/publications/food-beverage-nutrition/foodnavigator-usa.com/news/markets/cbd-celery-juice-pea-protein-moringa-sauerkraut-tastewise-talks-trending-ingredients/10198380-1-eng-GB/CBD-celery-juice-pea-protein-moringa-sauerkraut-Tastewise-talks-trending-ingredients_wrbm_large.jpg\" alt=\"Ingredientes\" />\n              <div className=\"main-card-background\" />\n            </button>\n          </Link>\n          <Link to=\"/explorar/comidas/area\" className=\"explore-food\">\n            <button\n              type=\"button\"\n              data-testid=\"explore-by-area\"\n              className=\"main-cards-div\"\n            >\n              <h3>Por Local de Origem</h3>\n              <img className=\"drinks-img\" src=\"https://www.familysearch.org/blog/en/wp-content/uploads/sites/2/2020/03/world-cuisine.jpg\" alt=\"origem\" />\n              <div className=\"main-card-background\" />\n            </button>\n          </Link>\n          <Link to={ url } className=\"explore-food\">\n            <button\n              type=\"button\"\n              data-testid=\"explore-surprise\"\n              className=\"main-cards-div\"\n            >\n              <h3>Me Surpreenda!</h3>\n              <img alt=\"aleatório\" src=\"https://www.sbs.com.au/food/sites/sbs.com.au.food/files/styles/full/public/eurovison_takeaway_roulette.jpg?itok=fGS7x7iY\" />\n              <div className=\"main-card-background\" />\n            </button>\n          </Link>\n        </section>\n        <Footer />\n      </section>\n    );\n  }\n}\n\nexport default ExploreFood;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport fetchAPI from '../services/fetchApi';\n\nclass ExploreBeverages extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      randomId: '',\n    };\n    this.fetchRandom = this.fetchRandom.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchRandom();\n  }\n\n  async fetchRandom() {\n    const url = 'https://www.thecocktaildb.com/api/json/v1/1/random.php';\n    const random = await fetchAPI(url);\n    const randomId = random.drinks[0].idDrink;\n    this.setState({\n      randomId,\n    });\n  }\n\n  render() {\n    const { randomId } = this.state;\n    const url = `/bebidas/${randomId}`;\n    return (\n      <section>\n        <Header title=\"Explorar Bebidas\" />\n        <section className=\"explore-cards-section\">\n          <Link to=\"/explorar/bebidas/ingredientes\" className=\"explore\">\n            <button\n              type=\"button\"\n              data-testid=\"explore-by-ingredient\"\n              className=\"main-cards-div explore-drinks\"\n            >\n              <h3>Por Ingredientes</h3>\n              <img src=\"https://cdn-a.william-reed.com/var/wrbm_gb_food_pharma/storage/images/publications/food-beverage-nutrition/foodnavigator-usa.com/news/markets/cbd-celery-juice-pea-protein-moringa-sauerkraut-tastewise-talks-trending-ingredients/10198380-1-eng-GB/CBD-celery-juice-pea-protein-moringa-sauerkraut-Tastewise-talks-trending-ingredients_wrbm_large.jpg\" alt=\"Ingredientes\" />\n              <div className=\"main-card-background explore-background\" />\n            </button>\n          </Link>\n          <Link to={ url } className=\"explore\">\n            <button\n              type=\"button\"\n              data-testid=\"explore-surprise\"\n              className=\"main-cards-div explore-drinks\"\n            >\n              <h3>Me Surpreenda!</h3>\n              <img className=\"drinks-img\" src=\"https://www.familysearch.org/blog/en/wp-content/uploads/sites/2/2020/03/world-cuisine.jpg\" alt=\"origem\" />\n              <div className=\"main-card-background explore-background\" />\n            </button>\n          </Link>\n        </section>\n        <Footer />\n      </section>\n    );\n  }\n}\n\nexport default ExploreBeverages;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport { foodIngredients, fetchApiAction } from '../redux/actions';\nimport fetchAPI from '../services/fetchApi';\n\nclass FoodIngredients extends React.Component {\n  constructor() {\n    super();\n\n    this.fetchFood = this.fetchFood.bind(this);\n    this.renderCards = this.renderCards.bind(this);\n    this.handleIngredientName = this.handleIngredientName.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchFood();\n  }\n\n  handleIngredientName(ingredient) {\n    const { addIngredientsRedux } = this.props;\n    addIngredientsRedux(ingredient);\n  }\n\n  async fetchFood() {\n    const { SendApiToState } = this.props;\n    const url = 'https://www.themealdb.com/api/json/v1/1/list.php?i=list';\n    const responseAPI = await fetchAPI(url);\n    SendApiToState(responseAPI);\n  }\n\n  renderCards() {\n    const { resultsApi: { meals } } = this.props;\n    const maxNumberOfCards = 11;\n    if (meals !== null) {\n      return meals.map((food, index) => {\n        if (index <= maxNumberOfCards) {\n          return (\n            <Link key={ index } to=\"/comidas\">\n              <button\n                type=\"button\"\n                data-testid={ `${index}-ingredient-card` }\n                onClick={ () => this.handleIngredientName(food.strIngredient) }\n                className=\"main-cards-div ingredient-btn\"\n              >\n                <h3 data-testid={ `${index}-card-name` }>{ food.strIngredient }</h3>\n                <div className=\"main-card-background\" />\n                <img\n                  src={ `https://www.themealdb.com/images/ingredients/${food.strIngredient}-Small.png` }\n                  alt={ food.strIngredient }\n                  data-testid={ `${index}-card-img` }\n                  width=\"150px\"\n                />\n              </button>\n            </Link>\n          );\n        }\n        return null;\n      });\n    }\n  }\n\n  render() {\n    return (\n      <section>\n        <Header title=\"Explorar Ingredientes\" />\n        {this.renderCards()}\n        <Footer />\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  resultsApi: state.data.resultAPI,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  SendApiToState: (payload) => dispatch(fetchApiAction(payload)),\n  addIngredientsRedux: (payload) => dispatch(foodIngredients(payload)),\n});\n\nFoodIngredients.propTypes = {\n  resultsApi: PropTypes.shape({\n    meals: PropTypes.arrayOf(PropTypes.object).isRequired,\n  }).isRequired,\n  SendApiToState: PropTypes.func.isRequired,\n  addIngredientsRedux: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FoodIngredients);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport { drinkIngredients, fetchApiAction } from '../redux/actions';\nimport fetchAPI from '../services/fetchApi';\n\nclass BeverageIngredients extends React.Component {\n  constructor() {\n    super();\n\n    this.renderCards = this.renderCards.bind(this);\n    this.fetchBeverages = this.fetchBeverages.bind(this);\n    this.handleIngredientName = this.handleIngredientName.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchBeverages();\n  }\n\n  handleIngredientName(ingredient) {\n    const { addIngredientsRedux } = this.props;\n    addIngredientsRedux(ingredient);\n  }\n\n  async fetchBeverages() {\n    const { SendApiToState } = this.props;\n    const url = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?i=list';\n    const responseAPI = await fetchAPI(url);\n    SendApiToState(responseAPI);\n  }\n\n  renderCards() {\n    const { resultsApi: { drinks } } = this.props;\n    const maxNumberOfCards = 11;\n    if (drinks !== null) {\n      return drinks.map((drink, index) => {\n        if (index <= maxNumberOfCards) {\n          return (\n            <Link to=\"/bebidas\" key={ index }>\n              <button\n                type=\"button\"\n                key={ index }\n                data-testid={ `${index}-ingredient-card` }\n                onClick={ () => this.handleIngredientName(drink.strIngredient1) }\n                className=\"main-cards-div drinks-ingredient-btn\"\n              >\n                <h3 data-testid={ `${index}-card-name` }>\n                  { drink.strIngredient1 }\n                </h3>\n                <div className=\"main-card-background\" />\n                <img\n                  src={ `https://www.thecocktaildb.com/images/ingredients/${drink.strIngredient1}-Small.png` }\n                  alt={ drink.strIngredient1 }\n                  data-testid={ `${index}-card-img` }\n                  width=\"150px\"\n                />\n              </button>\n            </Link>\n          );\n        }\n        return null;\n      });\n    }\n  }\n\n  render() {\n    return (\n      <section>\n        <Header title=\"Explorar Ingredientes\" />\n        <div className=\"ingredients-card-div\">\n          {this.renderCards()}\n        </div>\n        <Footer />\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  resultsApi: state.data.resultAPI,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  SendApiToState: (payload) => dispatch(fetchApiAction(payload)),\n  addIngredientsRedux: (payload) => dispatch(drinkIngredients(payload)),\n});\n\nBeverageIngredients.propTypes = {\n  resultsApi: PropTypes.shape({\n    drinks: PropTypes.arrayOf(PropTypes.object).isRequired,\n  }).isRequired,\n  SendApiToState: PropTypes.func.isRequired,\n  addIngredientsRedux: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BeverageIngredients);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport fetchAPI from '../services/fetchApi';\n\nclass FoodByOrigin extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      respAPI: [],\n      respArea: [],\n      respOriginal: [],\n      filter: 'All',\n    };\n\n    this.fetchFood = this.fetchFood.bind(this);\n    this.renderSelect = this.renderSelect.bind(this);\n    this.onChangeSelect = this.onChangeSelect.bind(this);\n    this.filterByArea = this.filterByArea.bind(this);\n    this.renderCards = this.renderCards.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchFood();\n  }\n\n  onChangeSelect({ target }) {\n    this.setState({ filter: target.value }, () => this.filterByArea());\n  }\n\n  async fetchFood() {\n    const url = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n    const responseAPI = await fetchAPI(url);\n    const url1 = 'https://www.themealdb.com/api/json/v1/1/list.php?a=list';\n    const responseArea = await fetchAPI(url1);\n    this.setState(\n      { respOriginal: responseAPI.meals,\n        respAPI: responseAPI.meals,\n        respArea: responseArea.meals,\n      },\n    );\n  }\n\n  async filterByArea() {\n    const { respOriginal, filter } = this.state;\n    let countryArea;\n    console.log('FILTER', filter);\n    if (filter !== 'All') {\n      const url = `https://www.themealdb.com/api/json/v1/1/filter.php?a=${filter}`;\n      const responseAPI = await fetchAPI(url);\n      console.log(responseAPI);\n      countryArea = responseAPI.meals;\n    } else {\n      countryArea = respOriginal;\n    }\n    return this.setState({ respAPI: countryArea });\n  }\n\n  renderSelect() {\n    const { respArea } = this.state;\n    return (\n      <select\n        data-testid=\"explore-by-area-dropdown\"\n        onChange={ (target) => this.onChangeSelect(target) }\n        className=\"searchBar-input select-By-Area\"\n      >\n        <option data-testid=\"All-option\"> All </option>\n        {respArea.map(({ strArea }, index) => (\n          <option key={ index } data-testid={ `${strArea}-option` }>\n            { strArea }\n          </option>\n        ))}\n      </select>\n    );\n  }\n\n  renderCards() {\n    const { respAPI } = this.state;\n    const maxNumberOfCards = 11;\n    if (respAPI !== null) {\n      return respAPI.map((food, index) => {\n        if (index <= maxNumberOfCards) {\n          return (\n            <Link key={ index } to={ `/comidas/${food.idMeal}` }>\n              <div data-testid={ `${index}-recipe-card` } className=\"main-cards-div\">\n                <div className=\"main-card-background\" />\n                <h3 data-testid={ `${index}-card-name` }>{ food.strMeal }</h3>\n                <img\n                  src={ food.strMealThumb }\n                  alt={ food.strMeal }\n                  data-testid={ `${index}-card-img` }\n                  width=\"150px\"\n                />\n              </div>\n            </Link>\n          );\n        }\n        return null;\n      });\n    }\n  }\n\n  render() {\n    return (\n      <section className=\"food-By-Area-section\">\n        <Header title=\"Explorar Origem\" />\n        { this.renderSelect() }\n        { this.renderCards() }\n        <Footer />\n      </section>\n    );\n  }\n}\n\nexport default FoodByOrigin;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\n\nclass Profile extends React.Component {\n  constructor() {\n    super();\n    this.onClickLogOut = this.onClickLogOut.bind(this);\n  }\n\n  onClickLogOut() {\n    const { history } = this.props;\n    localStorage.removeItem('user');\n    localStorage.removeItem('mealsToken');\n    localStorage.removeItem('cocktailsToken');\n    localStorage.removeItem('doneRecipes');\n    localStorage.removeItem('favoriteRecipes');\n    localStorage.removeItem('inProgressRecipes');\n    history.push('/');\n  }\n\n  renderEmail() {\n    const userEmail = JSON.parse(localStorage.getItem('user'));\n    if (userEmail) return userEmail.email;\n    return null;\n  }\n\n  render() {\n    return (\n      <section>\n        <Header title=\"Perfil\" />\n        <p\n          className=\"profile-email\"\n          data-testid=\"profile-email\"\n        >\n          { this.renderEmail() }\n        </p>\n        <hr />\n        <div className=\"container-btn-profile\">\n          <div className=\"btn-profile\">\n            <Link to=\"/receitas-feitas\">\n              <button\n                className=\"btn-done\"\n                data-testid=\"profile-done-btn\"\n                type=\"button\"\n              >\n                Receitas Feitas\n              </button>\n            </Link>\n          </div>\n          <div className=\"btn-profile\">\n            <Link to=\"/receitas-favoritas\">\n              <button\n                className=\"btn-favorite\"\n                data-testid=\"profile-favorite-btn\"\n                type=\"button\"\n              >\n                Receitas Favoritas\n              </button>\n            </Link>\n          </div>\n          <button\n            type=\"button\"\n            data-testid=\"profile-logout-btn\"\n            onClick={ this.onClickLogOut }\n            className=\"button-login\"\n          >\n            Sair\n          </button>\n        </div>\n        <Footer />\n      </section>\n    );\n  }\n}\n\nProfile.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default Profile;\n","import React from 'react';\nimport copy from 'clipboard-copy';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport shareIcon from '../images/shareIcon.svg';\nimport Header from '../components/Header';\n\nclass DoneRecipes extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      allRecipes: [],\n      doneRecipes: [],\n      copyLink: false,\n    };\n    this.getDoneRecipes = this.getDoneRecipes.bind(this);\n    this.onClickShare = this.onClickShare.bind(this);\n  }\n\n  componentDidMount() {\n    this.getDoneRecipes();\n  }\n\n  onClickShare(link) {\n    const startLink = window.location.href;\n    const split = startLink.split('/r');\n    console.log(split);\n    copy(`${split[0]}${link}`);\n    this.setState({\n      copyLink: true,\n    });\n  }\n\n  getDoneRecipes() {\n    const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n    if (doneRecipes) {\n      return this.setState({\n        allRecipes: doneRecipes,\n        doneRecipes,\n      });\n    }\n    return null;\n  }\n\n  renderDoneRecipes() {\n    const { doneRecipes, copyLink } = this.state;\n    return doneRecipes.map((recipe, index) => {\n      const link = `/${recipe.type}s/${recipe.id}`;\n      const recipeInfo = `${recipe.area} - ${recipe.category}`;\n      return (\n        <section key={ recipe.id }>\n          <Link to={ link }>\n            <div className=\"container-img-favorite\">\n              <img\n                data-testid={ `${index}-horizontal-image` }\n                src={ recipe.image }\n                alt={ recipe.name }\n                className=\"img-favorite\"\n              />\n            </div>\n          </Link>\n          <p className=\"text-recipe\" data-testid={ `${index}-horizontal-top-text` }>\n            {recipe.type === 'comida' ? recipeInfo : recipe.alcoholicOrNot }\n          </p>\n          <Link className=\"link-favorite\" to={ link }>\n            <p data-testid={ `${index}-horizontal-name` }>{recipe.name}</p>\n          </Link>\n          <p\n            className=\"date-done\"\n            data-testid={ `${index}-horizontal-done-date` }\n          >\n            {recipe.doneDate}\n          </p>\n          <p className=\"link-copy\">{ copyLink ? 'Link copiado!' : null }</p>\n          <div className=\"container-share-favorite\">\n            <button\n              type=\"button\"\n              onClick={ () => this.onClickShare(link) }\n              className=\"share-btn\"\n            >\n              <img\n                data-testid={ `${index}-horizontal-share-btn` }\n                src={ shareIcon }\n                alt=\"Compartilhar\"\n              />\n            </button>\n          </div>\n          {recipe.tags.map((tag, twoTag) => {\n            if (twoTag > 2 || tag === null) {\n              return null;\n            }\n            return (\n              <div\n                className=\"tag-done\"\n                data-testid={ `${index}-${tag}-horizontal-tag` }\n                key={ tag }\n              >\n                {tag}\n              </div>\n            );\n          })}\n        </section>\n      );\n    });\n  }\n\n  renderFilterDoneRecipe(type) {\n    const { allRecipes } = this.state;\n    const filter = allRecipes.filter((recipe) => recipe.type === type);\n    this.setState({\n      doneRecipes: filter,\n    });\n  }\n\n  render() {\n    return (\n      <section>\n        <Header title=\"Receitas Feitas\" />\n        <div className=\"container-btn\">\n          <button\n            data-testid=\"filter-by-all-btn\"\n            type=\"button\"\n            onClick={ this.getDoneRecipes }\n            className=\"main-btn\"\n          >\n            All\n          </button>\n          <button\n            data-testid=\"filter-by-food-btn\"\n            type=\"button\"\n            onClick={ () => this.renderFilterDoneRecipe('comida') }\n            className=\"main-btn\"\n          >\n            Food\n          </button>\n          <button\n            data-testid=\"filter-by-drink-btn\"\n            type=\"button\"\n            onClick={ () => this.renderFilterDoneRecipe('bebida') }\n            className=\"main-btn\"\n          >\n            Drinks\n          </button>\n        </div>\n        {this.renderDoneRecipes()}\n      </section>\n    );\n  }\n}\n\nDoneRecipes.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default DoneRecipes;\n","import React from 'react';\nimport copy from 'clipboard-copy';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport shareIcon from '../images/shareIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport Header from '../components/Header';\n\nclass FavoriteRecipes extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      allRecipes: [],\n      favoriteRecipes: [],\n      copyLink: false,\n    };\n    this.getFavoriteRecipes = this.getFavoriteRecipes.bind(this);\n    this.onClickShare = this.onClickShare.bind(this);\n  }\n\n  componentDidMount() {\n    this.getFavoriteRecipes();\n  }\n\n  onClickShare(link) {\n    const startLink = window.location.href;\n    const split = startLink.split('/r');\n    copy(`${split[0]}${link}`);\n    this.setState({\n      copyLink: true,\n    });\n  }\n\n  onClickFavoriteIcon(id) {\n    const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const newArray = favoriteRecipes.filter((recipe) => recipe.id !== id);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newArray));\n    this.setState({\n      favoriteRecipes: newArray,\n    });\n  }\n\n  getFavoriteRecipes() {\n    const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (favoriteRecipes) {\n      return this.setState({\n        allRecipes: favoriteRecipes,\n        favoriteRecipes,\n      });\n    }\n    return null;\n  }\n\n  renderFavoriteRecipes() {\n    const { favoriteRecipes, copyLink } = this.state;\n    return favoriteRecipes.map((recipe, index) => {\n      const link = `/${recipe.type}s/${recipe.id}`;\n      const recipeInfo = `${recipe.area} - ${recipe.category}`;\n      return (\n        <section key={ recipe.id }>\n          <Link to={ link }>\n            <div className=\"container-img-favorite\">\n              <img\n                data-testid={ `${index}-horizontal-image` }\n                src={ recipe.image }\n                alt={ recipe.name }\n                className=\"img-favorite\"\n              />\n            </div>\n          </Link>\n          <p className=\"text-recipe\" data-testid={ `${index}-horizontal-top-text` }>\n            {recipe.type === 'comida' ? recipeInfo : recipe.alcoholicOrNot }\n          </p>\n          <Link className=\"link-favorite\" to={ link }>\n            <p data-testid={ `${index}-horizontal-name` }>{recipe.name}</p>\n          </Link>\n          <p className=\"link-copy\">{ copyLink ? 'Link copiado!' : null }</p>\n          <div className=\"container-share-favorite\">\n            <button\n              type=\"button\"\n              onClick={ () => this.onClickShare(link) }\n              className=\"share-btn\"\n            >\n              <img\n                data-testid={ `${index}-horizontal-share-btn` }\n                src={ shareIcon }\n                alt=\"Compartilhar\"\n              />\n            </button>\n            <button\n              type=\"button\"\n              onClick={ () => this.onClickFavoriteIcon(recipe.id) }\n              className=\"favorite-btn\"\n            >\n              <img\n                src={ blackHeartIcon }\n                alt=\"favorito\"\n                data-testid={ `${index}-horizontal-favorite-btn` }\n              />\n            </button>\n          </div>\n          <hr className=\"line-favorite\" />\n        </section>\n      );\n    });\n  }\n\n  renderFilterFavoriteRecipe(type) {\n    const { allRecipes } = this.state;\n    const filter = allRecipes.filter((recipe) => recipe.type === type);\n    this.setState({\n      favoriteRecipes: filter,\n    });\n  }\n\n  render() {\n    return (\n      <section>\n        <Header title=\"Receitas Favoritas\" />\n        <div className=\"container-btn\">\n          <button\n            data-testid=\"filter-by-all-btn\"\n            type=\"button\"\n            onClick={ this.getFavoriteRecipes }\n            className=\"main-btn\"\n          >\n            All\n          </button>\n          <button\n            data-testid=\"filter-by-food-btn\"\n            type=\"button\"\n            onClick={ () => this.renderFilterFavoriteRecipe('comida') }\n            className=\"main-btn\"\n          >\n            Food\n          </button>\n          <button\n            data-testid=\"filter-by-drink-btn\"\n            type=\"button\"\n            onClick={ () => this.renderFilterFavoriteRecipe('bebida') }\n            className=\"main-btn\"\n          >\n            Drinks\n          </button>\n        </div>\n        {this.renderFavoriteRecipes()}\n      </section>\n    );\n  }\n}\n\nFavoriteRecipes.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default FavoriteRecipes;\n","import { Route, Switch } from 'react-router-dom';\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Login from './pages/Login';\nimport Food from './pages/Food';\nimport Beverages from './pages/Beverages';\nimport FoodRecipe from './pages/FoodRecipe';\nimport BeverageRecipe from './pages/BeverageRecipe';\nimport FoodInProgress from './pages/FoodInProgress';\nimport BeveragesInProgress from './pages/BeveragesInProgress';\nimport Explore from './pages/Explore';\nimport ExploreFood from './pages/ExploreFood';\nimport ExploreBeverages from './pages/ExploreBeverages';\nimport FoodIngredients from './pages/FoodIngredients';\nimport BeverageIngredients from './pages/BeverageIngredients';\nimport FoodByOrigin from './pages/FoodByOrigin';\nimport Profile from './pages/Profile';\nimport DoneRecipes from './pages/DoneRecipes';\nimport FavoriteRecipes from './pages/FavoriteRecipes';\n// import NotFound from './pages/NotFound';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={ Login } />\n      <Route exact path=\"/comidas\" component={ Food } />\n      <Route exact path=\"/bebidas\" component={ Beverages } />\n      <Route\n        exact\n        path=\"/comidas/:id\"\n        render={ (props) => <FoodRecipe { ...props } /> }\n      />\n      <Route exact path=\"/bebidas/:id\" component={ BeverageRecipe } />\n      <Route path=\"/comidas/:id/in-progress\" component={ FoodInProgress } />\n      <Route path=\"/bebidas/:id/in-progress\" component={ BeveragesInProgress } />\n      <Route exact path=\"/explorar\" component={ Explore } />\n      <Route exact path=\"/explorar/comidas\" component={ ExploreFood } />\n      <Route exact path=\"/explorar/bebidas\" component={ ExploreBeverages } />\n      <Route path=\"/explorar/comidas/ingredientes\" component={ FoodIngredients } />\n      <Route path=\"/explorar/bebidas/ingredientes\" component={ BeverageIngredients } />\n      <Route path=\"/explorar/comidas/area\" component={ FoodByOrigin } />\n      <Route path=\"/perfil\" component={ Profile } />\n      <Route path=\"/receitas-feitas\" component={ DoneRecipes } />\n      <Route path=\"/receitas-favoritas\" component={ FavoriteRecipes } />\n      <Route path=\"\" component={ Login } />\n    </Switch>\n  );\n}\n\nexport default App;\n","import { FETCH_API, FOOD_INGREDIENT, DRINK_INGREDIENT } from '../actions/actionTypes';\n\nconst INITIAL_STATE = {\n  resultAPI: {\n    drinks: [],\n    meals: [],\n    foodIngredient: null,\n    drinkIngredient: null,\n  },\n};\n\nfunction fetchApiReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case FETCH_API:\n    return {\n      ...state,\n      resultAPI: {\n        ...state.resultAPI,\n        ...action.payload,\n      },\n    };\n  case FOOD_INGREDIENT:\n    return {\n      ...state,\n      resultAPI: {\n        ...state.resultAPI,\n        foodIngredient: action.payload,\n      },\n    };\n  case DRINK_INGREDIENT:\n    return {\n      ...state,\n      resultAPI: {\n        ...state.resultAPI,\n        drinkIngredient: action.payload,\n      },\n    };\n  default:\n    return state;\n  }\n}\n\nexport default fetchApiReducer;\n","import { combineReducers } from 'redux';\nimport fetchApiReducer from './fetchApiReducer';\n\nconst rootReducers = combineReducers({\n  data: fetchApiReducer,\n});\n\nexport default rootReducers;\n","import { createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducers from '../reducers';\n\nconst store = createStore(\n  rootReducers,\n  composeWithDevTools(),\n);\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { BrowserRouter } from 'react-router-dom';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}